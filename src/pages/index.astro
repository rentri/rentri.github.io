---
import '../styles/index.css';

import ProfilePicture from '../assets/pfp.png';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import ImageGlow from '../components/ImageGlow.astro';
import Icon from '../components/Icon.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';

const [posts, projects, about, workExperience, education, quickInfo, socials] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('projects'),
	getEntry('other', 'about'),
	getCollection('workExperience'),
	getCollection('education'),
	getCollection('quickInfo'),
	getCollection('socials')
]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
---

<Layout
	title={openGraph.home.title || name}
	description={openGraph.home.description}
	pagefindIgnore
>	
	<div class="layout-grid-left" slot="left">
		<Card class="flex-col-card">
			<ImageGlow quality={100} width={101.5*1.5} height={153.5*1.5}  src={ProfilePicture} alt="Ser Rentri" loading='eager' />
			<h2>{name}</h2>
			<ul class="overview-list">
				{quickInfo.map((info) => (
					<li>
						<Icon type={info.data.icon.type} name={info.data.icon.name as any} width={24} height={24} class='glow-icon' />
						<span>{info.data.text}</span>
					</li>
				))}
			</ul>
		</Card>
		<Card>
			<h3 class="no-mt">Socials</h3>
			<ul class="overview-list">
				{socials.map((item) => (
					<li>
						<a href={item.data.link} class="socials-link">
							<Icon type={item.data.icon.type} name={item.data.icon.name as any} width={24} height={24} class='glow-icon' />
							<span>{item.data.text}</span>
						</a>
					</li>
				))}
			</ul>
		</Card>
	</div>
	<div class="layout-grid-right" slot="right">
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="user" width={24} height={24} class='glow-icon' />
				<h2>About me</h2>
			</div>
			<div class="prose">
				<About />
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="rss" width={24} height={24} class='glow-icon' />
				<h2>Latest Posts</h2>
			</div>
			<div class="content-container">
				{posts.sort((a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()).slice(0, 2).map((post) => (
					<a href={`/blog/${post.id}`} class="post-container">
						<div class="post-header">
							<h3>{post.data.title}</h3>
							<span class="post-date">
                				{post.data.createdAt.toLocaleDateString("en-GB").replace(/\//g, "/")}
              				</span>
						</div>
						<span>{post.data.description}</span>
					</a>
				))}
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="folder-git" width={24} height={24} class='glow-icon' />
				<h2>Latest Projects</h2>
			</div>
			<div class="content-container">
				{projects.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 2).map((project) => (
					<a href={`/projects/${project.id}`} class="post-container">
						<div class="post-header">
							<h3>{project.data.title}</h3>
							<span class="post-date">
  								{project.data.date.toLocaleDateString("en-GB").replace(/\//g, "/")}
							</span>

						</div>
						<span>{project.data.description}</span>
					</a>
				))}
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="briefcase-business" width={24} height={24} class='glow-icon' />
				<h2>Work Experience</h2>
			</div>
			<div class="work-experience-container">
				{workExperience.reverse().map((entry) => (
					<div class="work-experience-entry">
						<span class="work-experience-duration">{entry.data.duration}</span>
						<h3 class="work-experience-company">{entry.data.company}</h3>
						<span class="work-experience-role">{entry.data.title}</span>
						<p class="work-experience-desc">{entry.data.description}</p>
					</div>
				))}
			</div>
		</Card>
				<Card>
			<div class="header-container">
				<Icon type='lucide' name="graduation-cap" width={24} height={24} class='glow-icon' />
				<h2>Education</h2>
			</div>
			<div class="work-experience-container">
				{education.reverse().map((entry) => (
					<div class="work-experience-entry">
						<span class="education-duration">{entry.data.duration}</span>
						<h3 class="education-institute">{entry.data.institute}</h3>
						<span class="education-level">{entry.data.level}</span>
						<p class="education-desc">{entry.data.description}</p>
					</div>
				))}
			</div>
		</Card>
	</div>
</Layout>
